// Copyright 2016 Google Inc. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
@import "@material/ripple/common";
@import "@material/ripple/mixins";
@import "@material/rtl/mixins";
@import "@material/theme/mixins";
@import "@material/typography/mixins";
@import "@material/typography/variables";
@import "./mixins";
@import "./variables"; // TODO(acdvorak): Find a way to remove parent .list and .list-group selectors; they violate BEM.

.list,
.list-group {
    @include mdc-list-divider-color($mdc-list-divider-color-light);
    @include mdc-theme-dark {
        @include mdc-list-divider-color($mdc-list-divider-color-dark);
    }
}
// postcss-bem-linter: define list

.list {
    @include mdc-typography(subheading2);
    // TODO(acdvorak): Find a way to remove parent .list selector; it violates BEM.
    @include mdc-list-item-primary-text-ink-color(text-primary-on-background);
    @include mdc-list-item-secondary-text-ink-color(text-secondary-on-background);
    @include mdc-list-item-graphic-fill-color(transparent);
    @include mdc-list-item-graphic-ink-color(text-icon-on-background);
    @include mdc-list-item-meta-ink-color(text-hint-on-background);
    @include mdc-theme-dark {
        @include mdc-list-item-primary-text-ink-color(text-primary-on-dark);
        @include mdc-list-item-secondary-text-ink-color(text-secondary-on-dark);
        @include mdc-list-item-graphic-ink-color(text-icon-on-dark);
        @include mdc-list-item-meta-ink-color(text-hint-on-dark);
    }
    margin: 0;
    padding: 8px 0;
    // According to the mocks and stickersheet, the line-height is adjusted to 24px for text content,
    // same as for subheading1.
    line-height: map-get(map-get($mdc-typography-styles, subheading1), line-height);
    list-style-type: none;

    &.dense {
        padding-top: 4px;
        padding-bottom: 4px;
        font-size: 0.812rem;
    }
    // postcss-bem-linter: end
    // postcss-bem-linter: define list-item
    .list-item {
        @include mdc-typography-overflow-ellipsis;
        display: flex;
        align-items: center;
        justify-content: flex-start;
        height: 48px;
        padding: 0 $mdc-list-side-padding;
        // "Selected" is ephemeral and likely to change soon. E.g., selecting one or more photos to share in Google Photos.
        // "Activated" is more permanent. E.g., the currently highlighted navigation destination in a drawer.
        &.activated,
        &.selected {
            @include mdc-list-item-primary-text-ink-color(primary);
            @include mdc-list-item-graphic-ink-color(primary);
        }
        // stylelint-disable-next-line plugin/selector-bem-pattern
        .graphic {
            @include mdc-list-graphic-size_(24px);
            display: inline-flex;
            align-items: center;
            justify-content: center;
        }

        .meta {
            @include mdc-rtl-reflexive-property(margin, auto, 0, ".list-item");
        }

        .text {
            display: inline-flex;
            flex-direction: column;
        }

        .secondary-text {
            @include mdc-typography(body1);
            // Match the font size to the primary text when dense
            // stylelint-disable plugin/selector-bem-pattern
            .dense & {
                font-size: inherit;
            }
            // stylelint-enable plugin/selector-bem-pattern
        }
        // stylelint-disable plugin/selector-bem-pattern
    }

    &.dense .list-item {
        height: 40px;

        .graphic {
            @include mdc-list-graphic-size_(20px);
        }
    }

    &.avatar-list .list-item {
        height: 56px;

        .graphic {
            @include mdc-list-graphic-size_(40px);
            border-radius: 50%;
        }
    }

    &.avatar-list.dense .list-item {
        height: 48px;

        .graphic {
            @include mdc-list-graphic-size_(36px);
        }
    }

    &.two-line .list-item {
        height: 72px;
    }

    &.two-line.dense .list-item {
        height: 60px;
    }
    // postcss-bem-linter: end
    // Override anchor tag styles for the use-case of a list being used for navigation
    // stylelint-disable selector-max-type,selector-no-qualifying-type
    a.list-item {
        color: inherit;
        text-decoration: none;
    }
    // stylelint-enable selector-max-type,selector-no-qualifying-type
    .list-item {
        position: relative;
        overflow: hidden;

        &:focus {
            outline: none;
        }
    }
    // List items should support states by default, but it should be possible to opt out.
    // Direct child combinator is necessary for non-interactive modifier on parent to not match this selector.
    &:not(.non-interactive) > .list-item {
        @include mdc-ripple-surface;
        @include mdc-ripple-radius;
        @include mdc-states;
        @include mdc-states-activated(primary);
        @include mdc-states-selected(primary);
        @include mdc-theme-dark(".list") {
            @include mdc-states(white);
            @include mdc-states-activated(primary);
            @include mdc-states-selected(primary);
        }
    }
}
// postcss-bem-linter: define list-divider

.list-divider {
    height: 0;
    margin: 0;
    border: none;
    border-bottom-width: 1px;
    border-bottom-style: solid;

    &.padded {
        // Leave gaps on each side to match the padding on list items
        margin: 0 $mdc-list-side-padding;
    }

    &.inset {
        @include mdc-rtl-reflexive-box(margin, left, $mdc-list-text-offset, ".list-group");
        width: calc(100% - #{$mdc-list-text-offset});
    }

    &.inset.padded {
        width: calc(100% - #{$mdc-list-text-offset} - #{$mdc-list-side-padding});
    }
}
// postcss-bem-linter: end
// postcss-bem-linter: define list-group

.list-group {
    @include mdc-list-group-subheader-ink-color(text-primary-on-background);
    @include mdc-theme-dark {
        @include mdc-list-group-subheader-ink-color(text-primary-on-dark);
    }

    &__subheader {
        $mdc-list-subheader-virtual-height: 3rem;
        $mdc-list-subheader-leading: map-get(map-get($mdc-typography-styles, body2), line-height);
        $mdc-list-subheader-margin: ($mdc-list-subheader-virtual-height - $mdc-list-subheader-leading) / 2;
        @include mdc-typography(body2);
        margin: $mdc-list-subheader-margin $mdc-list-side-padding;
    }
    // Cancel top/bottom padding on individual lists within group
    .list {
        padding: 0;
    }
}
